# 요소가 한 개 들어있는 튜플 만들기

a = (38); print(a) # 괄호로 묶어주어도 값이 한 개일 경우 튜플이 아닌 그냥 값이 된다
a = (38,); print(a) # 괄호로 묶어주고 컴마를 붙여줄 경우 값이 한 개여도 튜플이 된다
a = 38,; print(a) # 괄호로 묶어주지 않아도 컴마를 붙이면 값이 한 개여도 튜플이 된다
# 요소를 변경하고 추가, 삭제할 수 없는 튜플의 특징이다
# 그런 튜플에서 값이 한 개짜리가 필요한 이유는 값이 아닌 튜플을 매개변수로 받는 함수들 때문이다

print() # 줄 바꿈을 위한 코드

# 튜플을 리스트로, 리스트를 튜플로 만들기
a = [1, 2, 3]
print(tuple(a)) # 리스트를 튜플로 바꾸기
b = (4, 5, 6)
print(list(b))  # 튜플을 리스트로 바꾸기
a = 1, 2, 3

print() # 줄 바꿈을 위한 코드

# 리스트와 튜플 안에 문자열을 입력
print(list('hello'))  # 문자열을 이루는 문자 하나하나가 리스트 요소로 변환
print(tuple('hello')) # 문자열을 이루는 문자 하나하나가 튜플 요소로 변환

print() # 줄 바꿈을 위한 코드

# 리스트와 튜플로 변수 만들기 (언패킹)
a, b, c = [1, 2, 3]
print(a, b, c)
d, e, f = (4, 5, 6)
print(d, e, f)
x = [7, 8, 9]
a, b, c = x
print(a, b, c)
y = (1, 2, 3)
d, e, f = y
print(d, e, f) # 리스트와 튜플의 요소를 변수 여러 개로 할당하는 것을 언패킹이라고 한다
# input().split()도 리스트를 반환하기에 한번에 여러 개의 변수를 할당하는 것이 가능했다

print() # 줄 바꿈을 위한 코드

# 패킹
# 여러 변수가 아닌 한 변수에 리스트와 튜플을 할당하는 것은 패킹이라고 한다.
a = [1, 2, 3]; print(a)
b = (1, 2, 3); print(b)
c = 1, 2, 3;   print(c)

