# 시퀀스 자료형 : 값이 연속적으로 이어진 자료형
# 리스트, 튜플, range, 문자열 모두 시퀀스 자료형에 포함

# 시퀀스 자료형의 공통 기능 사용하기

# 특정 값이 있는지 확인하기
a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
print(30 in a)
# '값' in '시퀀스 객체' 형식으로 특정 값이 시퀀스 객체 내에 있는지 확인 가능
print(100 in a)
print(100 not in a)
# '값' not in '시퀀스 객체' 형식으로 특정 값이 시퀀스 객체 내에 없는지 확인 가능

print() # 줄 바꿈을 위한 코드

# 시퀀스 객체 연결하기
# 같은 형태에 시퀀스 객체에 경우 두 시퀀스 객체는 연결할 수 있다
# 1. 리스트
a = [10, 20, 30, 40]
b = [9, 8, 7, 6]
print(a + b)

# 2. 튜플
x = (10, 20, 30, 40)
y = (9, 8, 7, 6)
print(x + y)

# 4. range
# range의 경우 + 연산자로 객체를 연결할 수 없다
# 따라서 range는 객체를 리스트나 튜플로 변환 후 객체를 연결한다
print(list(range(10))+list(range(10, 20))) # 리스트 변환 후 연결
print(tuple(range(10))+tuple(range(10, 20))) # 튜플 변환 후 연결

# 5. 문자열
print('Hello, '+'World!')
# 단 문자열이 아닌 숫자와 연결할 경우 숫자를 문자로 변환 후 연결시킨다
print('Hello, ' + str(10))

print() # 줄 바꿈을 위한 코드

# 시퀀스 객체 반복하기
# 1. 리스트
print([0, 10, 20, 30] * 3)

# 2. 튜플
print((0, 10, 20, 30) * 3)

# 3. range
# 연결하기와 마찬가지로 리스트나 튜플로 변환 후 반복시킨다
print(list(range(0, 5, 2))*3) # 리스트 변환 후 반복
print(tuple(range(0, 5, 2))*3) # 튜플 변환 후 반복

# 4. 문자열
print('Hello, ' * 3)
