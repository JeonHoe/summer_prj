// 사전적 규약

// 화이트 스페이스

// 화이트 스페이스는 공백(\b), 탭(\t) 그리고 개행(\n)을 나타낸다.
// Verilog에서 화이트 스페이스는 토큰들을 분리할 때를 제외하고 항상 무시된다.
// 하지만 문자열에서는 포함된다.

// 주석

// 주석은 가독성과 문서화를 위해 코드에 들어간다.
// 주석을 사용하는 방법은 두 가지로 '한 줄 주석'과 '여러 줄 주석'이 있다.

// 한 줄 주석 :
// 한 줄 주석은 '//'으로 시작된다. Verilog는 그 줄 끝까지 무시한다.

a = b && c // 한 줄 주석

// 여러 줄 주석:
// 여러 줄 주석은 "/*"로 시작해서 "*/"으로 끝난다. 여러 줄 주석은 중첩될 수 없다.
// 그러나 한 줄 주석은 여러 줄 주석에 내장될 수 있다.

/* 여러 줄
    주석*/

// 연산자

// 연산자는 단항, 이항 그리고 삼항 세 가지 형이 있다.

a = ~b; // ~는 단항 연산자, b는 피연산자
a = b && c; // &&는 이항 연산자, b와 c는 피연산자
a = b ? c : d; // ?:는 삼항 연산자, b, c와 d는 피연산자

// 수 표현

// Verilog는 크기 지정 기능과 크기 지정 불가능 형태의 두 가지 수 표현이 있다.

// 크기 지정 가능 수:
// 크기 지정 가능 수는 <크기> '<기본 형식> <숫자>의 형식을 갖는다.
// <크기>는 숫자의 비트 개수를 나타내고 오직 10진수만 가능하다.
// <기본 형식>은 10진수(d), 16진수(h), 2진수(b), 8진수(o)가 가능하다.
// <숫자>는 <기본 형식>에 맞는 수를 사용한다.

4'b1111 //  4비트  2진수
12'habc // 12비트 16진수
16'd255 // 16비트 10진수

// 크기 지정 불가능 수
// <기본 형식>을 지정하지 않은 숫자는 기본적으로 10진수이다.
// <크기>가 지정되진 않은 숫자는 시뮬레이터나 기계마다 다른 기본값을 갖는다(최소한 32비트).

23456 // 32비트 10진수
'hc3  // 32비트 16진수
'o21  // 32비트  8진수

// X, Z 값

// Verilog는 알 수 없는 값(unknown)과 하이 임피던스(high impedence)값을 나타내는 기호를 제공한다.
// 알 수 없는 값은 x, 하이 임피던스는 z로 표현된다.

12'h13x // 12비트 16진수; 마지막 4개 비트는 알 수 없는 값이다.
6'hx    //  6비트 16진수;  6비트 모두 알 수 없는 값이다.
32'bz   // 32비트  2진수; 32비트 모두 하이 임피던스 값이다.

// 음수

// 음수는 숫자의 <크기> 앞에 음수 부호를 붙이면 된다.
// 부호와 상관없이 <크기>는 항상 양의 값을 갖는다.
// <기본 형식>과 <숫자> 사이에 음수 부호가 들어가서는 안된다.
// 선택적 부호 명세는 부호 있는 산술을 위해 추가 될 수 있다.

-6'd3  // 6비트 10진수; 3의 2의 보수로써 음수.
-6'sd3 // 부호 있는 정수 계산에 사용.

// 언더스코어 문자와 물음표

// 언더스코어 문자:
// 언더스코어 문자 '_'는 맨 처음을 제외하고, <숫자>의 어떤 부분에 와도 상관없다.
// 언더스코어는 Verilog에 의해서 무시되고, 단지 가독성만 높여준다.

12b'1111_0000_1010 // 가독성을 높이기 위해 언더스코어 문자를 사용.

// 물음표:
// 물음표 '?'는 <숫자>에서 z와 같은 역할(하이 임피던스)을 한다.
// don't care 조건인 제7장 행위 수준 모델링에서 가독성을 높여준다.

4'b10?? // 4b'10zz와 동일하다.

// 문자열

// 문자열은 큰따옴표 사이에 있는 일련의 문자들이다.
// 문자열은 줄 바꿈 없이 한 주로만 제한되어 있다.
// 문자열은 일련의 1-바이트 ASCII값으로 다루어진다.

"Hello Verilog World" // 문자열

// 식별자와 키워드

// 키워드는 언어 구조를 정의하기 위해 미리 예약된 특별한 식별자이다.
// 키워드는 소문자이다.
// Verilog에 모든 키워드들은 부록 C-키워드, 시스템 태스크, 컴파일러 지시어 목록이 있다.

// 식별자는 설계시 객체들을 참조할 수 있게 하기 위해 객체에 주어진 이름이다.
// 식별자는 알파베스 숫자, 언더스코어 그리고 달러기호로 구성되어 있고 대소문자를 구별한다.
// 식별자는 알파벳이나 언더스코어로 시작될 수 있으나 숫자나 달러기호로 시작될 수 없다.

reg value; // reg는 키워드, value는 식별자.
input clk; // input은 키워드, clk는 식별자.

// 에스케이프 식별자

// 에스케이프 식별자는 백 슬러쉬(\) 문자로 시작해서, 화이트 스페이스(스페이스, 탭, 개행)로 끝난다.
// 백 슬러쉬와 화이트 스페이스 사이에 있는 모든 문자들은 글자 그대로 처리 된다.
// 출력하기 위한 ASCII 문자는 에스케이프 식별자에 포함된다.
// 백 슬러쉬와 화이트 스페이스는 식별자로 구분되어지지 않는다.

\a+b-c
\**my_name**
