// 2. 게이트 지연

// 지금까지는 지연이 없는 회로를 다뤘으나 실제 회로에서 논리 게이트는 지연을 갖고 있다.
// 게이트 지연으로 Verilog 사용자는  논리 회로에 지연을 지정해 줄 수 있다.

// 2.1 상승, 하강, 턴-오프 지연

// 프리미티브 게이트의 입력에서 출력으로 가는 지연은 3가지가 있다.

// (1) 상승 지연
// 상승 지연은 다른 값에서 1로 게이트 출력이 변화하는 것과 관계되어 있다.

// (2) 하강 지연
// 하강 지연은 다른 값에서 0으로 게이트 출력이 변화하는 것과 관계되어 있다.

// (3) 턴-오프 지연
// 턴-오프 지연은 어떤 값에서 하이 임피던스 값(z)으로 게이트 출력이 변화하는 것과 관계되어 있다.
// 만약 값이 1도 0도 그리고 z도 아닌 알 수 없는 값 x로 변했다면 3가지 지연 중 가장 작은 것으로 간주한다.


// 지연 맹세

// 지연을 표시하는데 3가지 형태가 있다.
// 만약 1개 지연만 지정됐다면, 이 값은 모든 변화에 사용된다.
// 1개가 아닌 2개의 지연이 지정됐다면, 상승과 하강 지연을 나타내며 턴-오프 지연은 두 지연 중 작은 것이다.
// 3개의 지연이 지정됐다면, 상승, 하강, 턴-오프 지연의 값을 모두 나타낸다.
// 지연이 지정되어 있지 않다면 기본값 0으로 인해 0지연이 된다.

wire out1, out2, out3, i1, i2, in, control;

// 지연 시간 지정

parameter delay_time = 10; // 모든 변화에 대한 지연
parameter rise_val = 4; 
parameter fall_val = 6; // 상승과 하강 지연
parameter turnoff_val = 3; // 턴-오프 지연

// 모든 변화에 대한 지연

and # (delay_time) a1 (out1, i1, i2);

// 상승과 하강 지연 맹세

and # (rise_val, fall_val) a2 (out2, i1, i2);

// 상승, 하강 그리고 턴-오프 지연 맹세

bufif0 # (rise_val, fall_val, turnoff_val) b1 (out3, in, control);

// 2.2 최소 / 전형적 / 최대값

// Verilog는 위에서 언급한 각각의 지연 형식에 대해 추가적인 조절 단계를 제공
// 각 지연에 대한 최소, 전형적 그리고 최대값을 지정할 수 있다.
// 시뮬레이션이 시작될 때 한 값을 선택할 수 있다.
// 최소/전형적/최대값은 IC 제작 과정의 변화 때문에 지연의 최소와 최대범위를 바꾸어야 하는 장치의 모델로 쓰여진다.

// (1) 최소값
// 최소값은 설계자가 예상한 게이트가 가지는 최소 지연값

// (2) 전형적 값
// 전형적 값은 설계자가 예쌍한 게이트가 가지는 전형적인 지연값

// (3) 최대값
// 최대값은 설계자가 예상한 게이트가 가지는 최대 지연값

// 위의 세 값은 Verilog 런타임시 선택될 수 있으며 선택 방법은 시뮬레이터와 운영 체제에 따라 다르다.

wire out1, out2, out3, i1, i2;

// 1개의 지연값
// 만약 최소값이 4, 전형적 값이 5, 최대값이 6인 경우

and # (4:5:6) a1 (out1, i1, i2);

// 2개의 지연값
// 만약 상승의 최소값이 4, 전형적 값이 5, 최대값이 6인 경우
// 만약 하강의 최소값이 5, 전형적 값이 6, 최대값이 7인 경우
// 턴-오프 지연은 두 지연의 값 중 작은 값을 따른다.

and # (4:5:6, 5:6:7) a2 (out2, i1, i2);

// 3개의 지연값
// 만약 상승의 최소값이 2, 전형적 값이 3, 최대값이 4인 경우
// 만약 하강의 최소값이 5, 전형적 값이 6, 최대값이 7인 경우
// 만약 턴-오프의 최소값이 4, 전형적 값이 5, 최대값이 6인 경우

and # (2:3:4, 5:6:7, 4:5:6) a3 (out3, i1, i2);
